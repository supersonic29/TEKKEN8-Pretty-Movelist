const baseAssetUrl="./assets/newAssets/img/",loadCharacterData=async e=>{const t=await fetch(`./assets/newAssets/data/${e}.json`);return await t.json()},damageValueMapping={M:"Mid",H:"High",L:"Low",SM:"Smid"},additionalMoveInputsMapping={FC:"Full Crouch"},addCharacterThumbnail=async e=>{const t=e.character,n=e.thumbnail,a=document.getElementById("characterSelect"),r=document.createElement("tr"),s=`\n        <td class=char-card id=${t}>\n            <img src=${baseAssetUrl+n} />\n            <p>${t}</p>\n        </td>\n    `;r.onclick=(()=>addCharacterMoves(e)),r.innerHTML=s,a.append(r)},createMoveNumber=e=>`\n        <div class="move-number">\n            ${e+1}\n        </div>`,createMoveTitle=e=>{return`\n    <div class="move-title">\n        <div class="move-name"> \n            ${e.name}\n        </div>\n        <div class="move-hitamount">\n            ${e.damageValues.length} ${(e=>e.length>1?"Hits":"Hit")(e.damageValues)}\n        </div>\n    </div>\n`},createMoveHitDamage=e=>{return`\n    <div class="move-hit-dmg">\n        <div class="move-hitlvlstring">\n            ${e.damageValues.map((t,n)=>{let a="";const r=n+1===e.damageValues.length;return a+=`<div class='mv-hitlvl hitmid'>${damageValueMapping[t.level]}</div>`,r||(a+='<i class="fa fa-chevron-right" aria-hidden="true"></i>'),a}).join("")}\n        </div>\n        ${createTotalDamage(e)}\n        ${createDamageBreakdownString(e)}\n    </div>\n    `},createTotalDamage=e=>{return`\n    <div class="move-dmg">\n        <p class="mv-frames">${e.damageValues.map(e=>e.damage).join(" + ")}</p>\n    </div>`},createDamageBreakdownString=e=>{const t=document.createElement("div");t.className="move-hitdmg";const n=e.damageValues.map(e=>e.damage);t.innerText=n.join(" + ");const a=document.createElement("i");return a.className="fa fa-plus-square",a.ariaHidden="true",a.onmouseenter=(()=>{console.log("ass"),t.style.display="initial"}),a.onmouseleave=(()=>{setTimeout(()=>{t.style.display="none"},3e3)}),`${t.outerHTML}`},getHitProperty=e=>e.launchNH?"LNC":e.knockdownNH?"KDN":"",getCounterHitProperty=e=>e.launchCH?"LNC":e.knockdownCH?"KDN":"",createMoveStartFrame=e=>`\n    <tr class="move-startf">\n        <td class="mv-id">Start</td>\n        <td class="mv-frames">${e.startup}</td>\n        <td></td>\n    </tr>\n    `,createMoveBlockFrame=e=>`\n    <tr class="move-blockf">\n        <td class="mv-id">Block</td>\n        <td class="mv-frames ${e.block<0?"blknegative":0===e.block?"blkzero":"blkpositive"}">${e.block}</td>\n        <td></td>\n    </tr>    `,createMoveHitFrame=e=>`\n    <tr class="move-hitf">\n        <td class="mv-id">Hit</td>\n        <td class="mv-frames ${e.normalHit<0?"blknegative":0===e.normalHit?"blkzero":"blkpositive"}">${e.normalHit}</td>\n        <td>${getHitProperty(e.properties)}</td>\n    </tr>\n    `,createMoveCounterHitFrame=e=>`\n    <tr class="move-counterhitf">\n        <td  class="mv-id">Counter Hit</td>\n        <td class="mv-frames ${e.counterHit<0?"blknegative":0===e.counterHit?"blkzero":"blkpositive"}">${e.counterHit}</td>\n        <td>${getCounterHitProperty(e.properties)}</td>\n    </tr>\n    `,createMoveHTML=(e,t)=>{const n=document.createElement("tr"),a=`\n    <td class="move-card">\n        <div class="move-info">\n            ${createMoveNumber(e)}\n            ${createMoveTitle(t)}\n            ${createMoveInputs(t)}\n            ${createMoveHitDamage(t)}\n        </div>\n        <div class="move-extra">\n            <div class="mv-section">\n                <div class="move-special">\n                    <div style="display: flex; justify-content: space-between;">\n                        <div >\n                        ${t.frameProperties.jumpFrame>=0?"JUMP START":""}\n                        </div>\n                        <div>\n                            ${t.frameProperties.jumpFrame>=0?t.frameProperties.jumpFrame:""}\n                        </div>\n                    </div>\n                    <div style="display: flex; justify-content: space-between;">\n                    <div>\n                    ${t.frameProperties.crouchFrame>=0?"CROUCH START":""}\n                        </div>\n                        <div>\n                            ${t.frameProperties.crouchFrame>=0?t.frameProperties.crouchFrame:""}\n                        </div>\n                    </div>\n                    <div style="display: flex;">\n                        <div style="white-space: nowrap;">\n                        ${t.frameProperties.powerCrush>=0?"P-CRUSH":""}\n                        </div>\n                        <div>\n                            ${t.frameProperties.powerCrush>=0?"&nbsp;"+t.frameProperties.powerCrush:""}\n                        </div>\n                        <div>\n                        </div>\n                    </div>\n                </div>\n                <table class="move-frames">\n                    <tbody>\n                        ${createMoveStartFrame(t)}\n                        ${createMoveBlockFrame(t)}\n                        ${createMoveHitFrame(t)}\n                        ${createMoveCounterHitFrame(t)}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </td>\n    `;return n.innerHTML=a,n},createNotesHTML=e=>{const t=document.createElement("tr"),n=`\n    <td class="move-notes">\n        ${e.map(e=>`\n        <div class="move-info">\n            ${e}\n        </div>\n        `).join("")}\n    </td>\n    `;return t.innerHTML=n,t},addCharacterMoves=e=>{const t=document.getElementById("moveTable");t.innerHTML="",e.moves.forEach((e,n)=>{t.appendChild(createMoveHTML(n,e)),e.notes&&(console.log(e.notes),t.appendChild(createNotesHTML(e.notes)))}),document.getElementById("selected-title").innerText=e.character};function processString(e){let t=e.replace(/\s/g,"$").replace(/([a-zA-Z])\+([0-9])/g,"$1$2").split(/([,\~\[\]\$])|(?<=[a-zA-Z])(?=\d)|(?<=\d)(?=[a-zA-Z])/).filter(Boolean);for(let e=0;e<t.length;e++)"T!"===t[e]&&"$"===t[e-1]&&t.splice(e-1,1);for(let e=0;e<t.length;e++)/^[A-Z]{3}$/.test(t[e])&&"$"===t[e+1]&&t.splice(e+1,1);return t.filter(e=>","!==e&&"~"!==e)}const createMoveInputs=e=>{let t="";return processString(e.input[0]).forEach(e=>{Object.keys(additionalMoveInputsMapping).includes(e)?t+=additionalMoveInputsMapping[e]:t+=`<img class='move-arrow' src='./assets/newAssets/btn/${e}.png' />`}),`\n        <div class="move-string">\n            ${t}\n        </div>\n    `},hardCodedChars=["jun","reina"],main=async()=>{for(let e=0;e<hardCodedChars.length;e++){const t=await loadCharacterData(hardCodedChars[e]);addCharacterThumbnail(t),addCharacterMoves(t)}};!async function(){main()}();