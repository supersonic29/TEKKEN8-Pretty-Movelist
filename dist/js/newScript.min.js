const baseAssetUrl="./assets/newAssets/img/",loadCharacterData=async e=>{const a=await fetch(`./assets/newAssets/data/${e}.json`);return await a.json()},damageValueMapping={M:"Mid",H:"High",L:"Low",SM:"Smid"},additionalMoveInputsMapping={FC:"Full Crouch"},addCharacterThumbnail=async e=>{const a=e.character,t=e.thumbnail,n=document.getElementById("characterSelect"),r=document.createElement("tr"),s=`\n        <td class=char-card id=${a}>\n            <img src=${baseAssetUrl+t} />\n            <p>${a}</p>\n        </td>\n    `;r.onclick=(()=>addCharacterMoves(e)),r.innerHTML=s,n.append(r)},createMoveNumber=e=>`\n        <div class="move-number">\n            ${e+1}\n        </div>`,createMoveTitle=e=>{return`\n    <div class="move-title">\n        <div class="move-name"> \n            ${e.name}\n        </div>\n        <div class="move-hitamount">\n            ${e.damageValues.length} ${(e=>e.length>1?"Hits":"Hit")(e.damageValues)}\n        </div>\n    </div>\n`},createMoveHitDamage=e=>{return`\n    <div class="move-hit-dmg">\n        <div class="move-hitlvlstring">\n            ${e.damageValues.map((a,t)=>{let n="";const r=t+1===e.damageValues.length;return n+=`<div class='mv-hitlvl hitmid'>${damageValueMapping[a.level]}</div>`,r||(n+='<i class="fa fa-chevron-right" aria-hidden="true"></i>'),n}).join("")}\n        </div>\n        ${createTotalDamage(e)}\n        ${createDamageBreakdownString(e)}\n    </div>\n    `},createTotalDamage=e=>{return`\n    <div class="move-dmg">\n        <p class="mv-frames">${e.damageValues.map(e=>e.damage).join(" + ")}</p>\n    </div>`},createDamageBreakdownString=e=>{const a=document.createElement("div");a.className="move-hitdmg";const t=e.damageValues.map(e=>e.damage);a.innerText=t.join(" + ");const n=document.createElement("i");return n.className="fa fa-plus-square",n.ariaHidden="true",n.onmouseenter=(()=>{console.log("ass"),a.style.display="initial"}),n.onmouseleave=(()=>{setTimeout(()=>{a.style.display="none"},3e3)}),`${a.outerHTML}`},getHitProperty=e=>e.launchNH?"LNC":e.knockdownNH?"KDN":"",getCounterHitProperty=e=>e.launchCH?"LNC":e.knockdownCH?"KDN":"",createMoveStartFrame=e=>`\n    <tr class="move-startf">\n        <td class="mv-id">Start</td>\n        <td class="mv-frames">${e.startup}</td>\n        <td></td>\n    </tr>\n    `,createMoveBlockFrame=e=>`\n    <tr class="move-blockf">\n        <td class="mv-id">Block</td>\n        <td class="mv-frames ${e.block<0?"blknegative":0===e.block?"blkzero":"blkpositive"}">${e.block}</td>\n        <td></td>\n    </tr>    `,createMoveHitFrame=e=>`\n    <tr class="move-hitf">\n        <td class="mv-id">Hit</td>\n        <td class="mv-frames ${e.normalHit<0?"blknegative":0===e.normalHit?"blkzero":"blkpositive"}">${e.normalHit}</td>\n        <td>${getHitProperty(e.properties)}</td>\n    </tr>\n    `,createMoveCounterHitFrame=e=>`\n    <tr class="move-counterhitf">\n        <td  class="mv-id">Counter Hit</td>\n        <td class="mv-frames ${e.counterHit<0?"blknegative":0===e.counterHit?"blkzero":"blkpositive"}">${e.counterHit}</td>\n        <td>${getCounterHitProperty(e.properties)}</td>\n    </tr>\n    `,badgeToImageMap={powerCrush:"powerCrush.png",homing:"homing.png",tornado:"tornado.png",forceCrouch:"forceCrouch.png",heatEngager:"heatEngager.png",eraseRecoverable:"eraseRecoverable.png",wallBreak:"wallBreak.png",floorBreak:"floorBreak.png"},createBadgeImages=e=>{return Object.keys(badgeToImageMap).map(a=>{const t=e.properties[a];return console.log("THE BADGE!",t),t?`<img style="width: 36px; height: 36px;" src='./assets/newAssets/${badgeToImageMap[a]}' />`:null}).filter(e=>e).join("")},createMoveHTML=(e,a)=>{const t=document.createElement("tr"),n=`\n    <td class="move-card">\n        <div class="move-info">\n            ${createMoveNumber(e)}\n            ${createMoveTitle(a)}\n            ${createMoveInputs(a)}\n            ${createMoveHitDamage(a)}\n        </div>\n        <div class="move-extra">\n            <div class="mv-section">\n                <div class="move-special">\n                    <div style="display: flex; justify-content:  flex-end;">\n                        <div >\n                        ${a.frameProperties.jumpFrame>=0?"JUMP START&nbsp;":""}\n                        </div>\n                        <div>\n                            ${a.frameProperties.jumpFrame>=0?a.frameProperties.jumpFrame:""}\n                        </div>\n                    </div>\n                    <div style="display: flex; justify-content: flex-end;">\n                    <div>\n                    ${a.frameProperties.crouchFrame>=0?"CROUCH START&nbsp;":""}\n                        </div>\n                        <div>\n                            ${a.frameProperties.crouchFrame>=0?a.frameProperties.crouchFrame:""}\n                        </div>\n                    </div>\n                    <div style="display: flex;">\n                        <div style="white-space: nowrap;">\n                        ${a.frameProperties.powerCrushFrame>0?"P-CRUSH":""}\n                        </div>\n                        <div>\n                            ${a.frameProperties.powerCrushFrame>0?"&nbsp;"+a.frameProperties.powerCrushFrame:""}\n                        </div>\n                        <div style="display: flex; flex-wrap: wrap;"> \n                            ${createBadgeImages(a)}\n                        </div>\n                    </div>\n                </div>\n                <table class="move-frames">\n                    <tbody>\n                        ${createMoveStartFrame(a)}\n                        ${createMoveBlockFrame(a)}\n                        ${createMoveHitFrame(a)}\n                        ${createMoveCounterHitFrame(a)}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </td>\n    <td class="move-notes">\n    ${a.notes.map(e=>`\n        <div class="move-info">\n            ${e}\n        </div>\n        `).join("")}\n    </td>\n    `;return t.innerHTML=n,t},addCharacterMoves=e=>{const a=document.getElementById("moveTable");a.innerHTML="",e.moves.forEach((e,t)=>{a.appendChild(createMoveHTML(t,e))}),document.getElementById("selected-title").innerText=e.character};function processString(e){let a=e.replace(/\s/g,"$").replace(/([a-zA-Z])\+([0-9])/g,"$1$2").split(/([,\~\[\]\$])|(?<=[a-zA-Z])(?=\d)|(?<=\d)(?=[a-zA-Z])/).filter(Boolean);for(let e=0;e<a.length;e++)"T!"===a[e]&&"$"===a[e-1]&&a.splice(e-1,1);for(let e=0;e<a.length;e++)/^[A-Z]{3}$/.test(a[e])&&"$"===a[e+1]&&a.splice(e+1,1);return a.filter(e=>","!==e&&"~"!==e)}const createMoveInputs=e=>{let a="";return processString(e.input[0]).forEach(e=>{Object.keys(additionalMoveInputsMapping).includes(e)?a+=additionalMoveInputsMapping[e]:a+=`<img class='move-arrow' src='./assets/newAssets/btn/${e}.png' />`}),`\n        <div class="move-string">\n            ${a}\n        </div>\n    `},hardCodedChars=["jun","reina"],main=async()=>{for(let e=0;e<hardCodedChars.length;e++){const a=await loadCharacterData(hardCodedChars[e]);addCharacterThumbnail(a),addCharacterMoves(a)}};!async function(){main()}();
